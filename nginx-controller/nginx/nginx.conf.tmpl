
user  nginx;
worker_processes  auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 65536;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    {{- if .HTTPSnippets}}
    {{range $value := .HTTPSnippets}}
    {{$value}}{{end}}
    {{- end}}

    {{if .LogFormat -}}
    log_format  main  '{{.LogFormat}}';
    {{- else -}}
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    {{- end }}
    access_log  /var/log/nginx/access.log main if=$loggable;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    reset_timedout_connection on;
    keepalive_timeout 75;
    keepalive_requests 100;

    proxy_headers_hash_max_size 1024;
    proxy_headers_hash_bucket_size 128;

    gzip on;
    gzip_disable "MSIE [1-6].(?!.*SV1)";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    {{if .ServerNamesHashMaxSize}}server_names_hash_max_size {{.ServerNamesHashMaxSize}};{{end}}
    {{if .ServerNamesHashBucketSize}}server_names_hash_bucket_size {{.ServerNamesHashBucketSize}};{{end}}

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    {{if .SSLProtocols}}ssl_protocols {{.SSLProtocols}};{{end}}
    {{if .SSLCiphers}}ssl_ciphers "{{.SSLCiphers}}";{{end}}
    {{if .SSLPreferServerCiphers}}ssl_prefer_server_ciphers on;{{end}}
    {{if .SSLDHParam}}ssl_dhparam {{.SSLDHParam}};{{end}}
    ssl_session_cache builtin:1000 shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets on; # allow configuring ssl session tickets
    ssl_buffer_size 4k; # slightly reduce the time-to-first-byte

    {{if .HealthStatus}}
    server {
        listen 80 default_server;
        listen 443 ssl default_server;

        ssl_certificate /etc/nginx/default-ssl/tls.crt;
        ssl_certificate_key /etc/nginx/default-ssl/tls.key;

        server_name _;
        server_tokens off;

        add_header X-Default-Ingress true always;

        location /nginx-health {
            access_log off;
            default_type text/plain;
            return 200 "healthy\n";
        }

        location /nginx_status {
          stub_status on;
          access_log off;
          allow 127.0.0.1;
          deny all;
        }

        location / {
            return 307 https://pasientsky.no;
        }
    }
    {{end}}

    map $status $loggable {
        ~^[23]  0;
        default 1;
    }

    include /etc/nginx/conf.d/*.conf;
}
